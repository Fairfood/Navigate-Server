"""
Django settings for trace_sso project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

import sentry_sdk
from celery.schedules import crontab

from . import env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/


ENVIRONMENT = env.get("ENVIRONMENT")
DEPLOYMENT = env.get("DEPLOYMENT")

ROOT_URL = env.get("ROOT_URL")
FRONT_ROOT_URL = env.get("FRONT_ROOT_URL")

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    ROOT_URL,
    "localhost",
    "127.0.0.1",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'oauth2_provider',
    'v1.supply_chains',
    'v1.farms',
    'v1.dashboard',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # CORS header middlewares
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "base.authentication.CustomDynamicAuthentication"],
    "DEFAULT_PERMISSION_CLASSES": ["base.permissions.CombinedPermission"], 
    "DEFAULT_THROTTLE_CLASSES": ["rest_framework.throttling.AnonRateThrottle"],
    "DEFAULT_THROTTLE_RATES": {"anon": "5/min"},
    # "EXCEPTION_HANDLER": (
    #     "base.exceptions.exception_handler.custom_exception_handler"
    # ),
    "DATETIME_FORMAT": "%s",
    "DEFAULT_PAGINATION_CLASS": (
        "rest_framework.pagination.LimitOffsetPagination"
    ),
    "PAGE_SIZE": 10,
    "DEFAULT_RENDERER_CLASSES": ("base.renderers.HashIDRenderer",),
    "DEFAULT_FILTER_BACKENDS": (
        "django_filters.rest_framework.DjangoFilterBackend",
    ),
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.URLPathVersioning",
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
}   

ROOT_URLCONF = 'navigate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'navigate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env.get("DB_NAME"),
        "USER": env.get("DB_USER"),
        "PASSWORD": env.get("DB_PASSWORD"),
        "PORT": env.get("DB_PORT", default="5432"),
        "HOST": env.get("DB_HOST", default="localhost"),
        "DISABLE_SERVER_SIDE_CURSORS": True,
    }
}

REDIS_URL = env.get("REDIS_URL", default="redis://127.0.0.1")
REDIS_PORT = env.get("REDIS_PORT", default=6379)

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"{REDIS_URL}:{REDIS_PORT}/1",
        "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
        "KEY_PREFIX": "navigate_django",
    }
}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'supply_chains.User'
LOGIN_URL='/navigate/admin/login/'

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = ("GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS")
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-disposition",
    "content-type",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "user-id",
    "entity-id",
    "token",
    "language",
    "timezone",
]
CORS_PREFLIGHT_MAX_AGE = 86400
CORS_ALLOW_CREDENTIALS = True

# Email setup
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = env.get("EMAIL_HOST")
EMAIL_PORT = env.get("EMAIL_PORT")
EMAIL_HOST_USER = env.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env.get("EMAIL_HOST_PASSWORD")
FROM_EMAIL = EMAIL_HOST_USER
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

HASHID_FIELD_SALT = env.get("HASHID_SALT")

# Cors setup

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = ("GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS")
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-disposition",
    "content-type",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "user-id",
    "entity-id",
    "token",
    "language",
    "timezone",
]

CORS_PREFLIGHT_MAX_AGE = 86400  
CORS_ALLOW_CREDENTIALS = True

TRACE_OAUTH2_CLIENT_ID = env.get("TRACE_OAUTH2_CLIENT_ID", default='')

TOTP_SECRET = env.get("TOTP_SECRET")

STATIC_URL = "/static/"
STATIC_ROOT = "static/"

sentry_sdk.init(
    dsn=env.get("SENTRY_DSN"),
    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    traces_sample_rate=1.0,
    # Set profiles_sample_rate to 1.0 to profile 100%
    # of sampled transactions.
    # We recommend adjusting this value in production.
    profiles_sample_rate=1.0,
    environment=ENVIRONMENT,
)

#earth engine
EE_SERVICE_ACCOUNT = env.get("EE_SERVICE_ACCOUNT", default="")
EE_SERVICE_ACCOUNT_CREDENTIAL_PATH = env.get("EE_SERVICE_ACCOUNT_CREDENTIAL_PATH", default="")


CELERY_BEAT_SCHEDULE = {
    "analysis_sync": {
        "task": "send_out_reminder_emails",
        "schedule": crontab(hour=1, minute=0),
    }
}
AUTH_TYPE_CLASSES = {
    'external_auth': 'base.authentication.SwitchJWTAuthentication',
    'client_credentials': 'base.authentication.CustomOAuth2Authentication',
}

OAUTH2_PROVIDER = {
    "OAUTH2_VALIDATOR_CLASS": ("base.validators.OAuth2ClientAccessValidator"),
    "SCOPES": {
        "read:farmer": "Read Farmer",
        "create:farmer": "Create Farmer",
        "update:farmer": "Update Farmer",
        "delete:farmer": "Delete Farmer",
        "read:company": "Read Company",
        "create:company": "Create Company",
        "update:company": "Update Company",
        "delete:company": "Delete Company",
        "read:batch": "Read Batch",
        "create:batch": "Create Batch",
        "update:batch": "Update Batch",
        "delete:batch": "Delete Batch",
        "read:user": "Read User",
    },
 }
